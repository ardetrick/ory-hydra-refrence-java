plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id "io.freefair.lombok" version "6.5.1"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	set('testcontainersVersion', "1.17.4")
}
dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
	implementation 'sh.ory.hydra:hydra-client:2.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.session:spring-session-core'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-jersey'

	testImplementation project(':testcontainers-ory-hydra')
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'com.microsoft.playwright:playwright:1.27.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

// A way to run Playwright CLI commands using the Java source dependency.
// Particularly useful from within a CI context (see ./.github/workflows.gradle.yml).
// https://playwright.dev/docs/cli#install-system-dependencies
// https://github.com/microsoft/playwright-java/issues/571
// ./gradlew playwright --args="install-deps"
task playwright(type: JavaExec) {
	classpath sourceSets.test.runtimeClasspath
	mainClass = 'com.microsoft.playwright.CLI'
	if (project.hasProperty('args')) {
		args project.getProperty('args')
	}
}
